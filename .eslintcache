[{"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\index.js":"1","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\App.js":"2","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\reportWebVitals.js":"3","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\stores\\OrdersStore.js":"4","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Orders.js":"5","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\MapContainer.js":"6","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\LogIn.js":"7","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Scan.js":"8","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Contact.js":"9","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\NavBar.js":"10","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Order.js":"11","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Clock.js":"12","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\MapComponents\\LeafletMap.js":"13","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Display.js":"14","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\MapComponents\\RoutingMachine.js":"15","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\lib\\DateTime.js":"16"},{"size":647,"mtime":1611487171486,"results":"17","hashOfConfig":"18"},{"size":1044,"mtime":1611487144619,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":4474,"mtime":1611488362261,"results":"21","hashOfConfig":"18"},{"size":5055,"mtime":1611481989631,"results":"22","hashOfConfig":"18"},{"size":3732,"mtime":1611481989630,"results":"23","hashOfConfig":"18"},{"size":3034,"mtime":1611488321275,"results":"24","hashOfConfig":"18"},{"size":887,"mtime":1611481989632,"results":"25","hashOfConfig":"18"},{"size":4812,"mtime":1611488299903,"results":"26","hashOfConfig":"18"},{"size":1515,"mtime":1611481989630,"results":"27","hashOfConfig":"18"},{"size":1713,"mtime":1611481989630,"results":"28","hashOfConfig":"18"},{"size":963,"mtime":1611481989620,"results":"29","hashOfConfig":"18"},{"size":1138,"mtime":1611481989623,"results":"30","hashOfConfig":"18"},{"size":830,"mtime":1611481989621,"results":"31","hashOfConfig":"18"},{"size":1497,"mtime":1611481989623,"results":"32","hashOfConfig":"18"},{"size":1558,"mtime":1611481989637,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"z0p52q",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\index.js",[],["73","74"],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\App.js",["75"],"import './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport React, { useEffect } from 'react';\n\nimport LogIn from './components/LogIn'\nimport { observer, inject } from 'mobx-react'\nimport Orders from './components/Orders';\nimport MapContainer from './components/MapContainer';\nimport Contact from './components/Contact';\nimport NavBar from './components/NavBar';\nimport Scan from './components/Scan';\n\nfunction App(props) {\n\n  props.ordersStore.checkLocalStorage()\n  return (\n    <Router>\n      {props.ordersStore.islogIn && <NavBar/> }\n      <Route exact path='/' render={() =>props.ordersStore.islogIn ? <Orders/> : <LogIn/>} /> \n      <Route exact path='/contact' render={() =>props.ordersStore.islogIn ? <Contact/> : <LogIn/>} /> \n      <Route exact path='/map' render={() =>props.ordersStore.islogIn ? <MapContainer /> : <LogIn/>} />\n      <Route exact path='/Scan' render={() =>props.ordersStore.islogIn ? <Scan /> : <LogIn/>} />\n\n    </Router>\n  )\n}\n\nexport default inject('ordersStore')(observer(App));\n","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\reportWebVitals.js",[],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\stores\\OrdersStore.js",["76","77"],"import { observable, action, makeObservable, computed } from 'mobx'\r\nimport axios from \"axios\";\r\nimport L from \"leaflet\";\r\n\r\nexport default class OrdersStore {\r\n    constructor() {\r\n        this.orders = []\r\n        this.currentUser = {\r\n            \r\n        }\r\n        this.islogIn = false\r\n        this.locations = []\r\n        this.lat = 32.073582\r\n        this.lan = 34.788052\r\n        this.distance = 0\r\n        this.time = 0\r\n        makeObservable(this, {\r\n            distance: observable,\r\n            time: observable,\r\n            lat: observable,\r\n            lan: observable,\r\n            orders: observable,\r\n            locations: observable,\r\n            getOrders: action,\r\n            currentUser: observable,\r\n            islogIn: observable,\r\n            setReceived: observable,\r\n            login: action,\r\n            logout: action,\r\n            totalReceived: computed,\r\n            totalNotReceivedYet: computed,\r\n            getLocations: action,\r\n            checkLocalStorage: action,\r\n            setLocalStorage: action,\r\n            emptyLocalStorage: action,\r\n            updateLocation: action,\r\n            getNextOrder : action,\r\n            updateDistTime: action\r\n        })\r\n    }\r\n\r\n    updateDistTime(distance ,time){\r\n        this.distance = distance\r\n        this.time = time\r\n    }\r\n\r\n    checkLocalStorage() {\r\n        const userName = JSON.parse(localStorage.getItem('userName'));\r\n        if (!userName) {\r\n            this.islogIn = false\r\n            this.currentUser = {}\r\n            return\r\n        }\r\n        this.islogIn = true\r\n        this.currentUser = userName\r\n    }\r\n\r\n\r\n    setLocalStorage(userName) {\r\n        localStorage.setItem('userName', JSON.stringify(userName))\r\n        this.islogIn = true\r\n        this.currentUser = userName\r\n    }\r\n\r\n    emptyLocalStorage() {\r\n        localStorage.clear()\r\n        this.islogIn = false\r\n        this.currentUser = {}\r\n        this.orders = []\r\n        this.locations = []\r\n    }\r\n\r\n    async getOrders() {\r\n        let orders = await axios.post('/orders', this.currentUser)\r\n        this.orders = orders.data.packages\r\n        this.getLocations()\r\n    }\r\n\r\n    login(isLogIn, input) {\r\n        if (isLogIn) {\r\n            this.setLocalStorage(input)\r\n            this.getOrders()\r\n        } else {\r\n            alert(\"userName or password is not correct!\")\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        this.emptyLocalStorage()\r\n    }\r\n\r\n    async setReceived(orderId) {\r\n        await axios.post('/setReceived', { id: orderId })\r\n        this.getOrders()\r\n    }\r\n\r\n    get totalReceived() {\r\n        let c = 0;\r\n        for (let order of this.orders) {\r\n            if (order.received) { c++ }\r\n        }\r\n        return c;\r\n    }\r\n\r\n    get totalNotReceivedYet() {\r\n        return this.orders.length - this.totalReceived;\r\n    }\r\n\r\n    async getLocations() {\r\n        this.locations = this.orders.filter(o => !o.received).\r\n            map(v => { return L.latLng(parseFloat(v.lat), parseFloat(v.lan)) })\r\n        this.locations.unshift( L.latLng(parseFloat(this.lat), parseFloat(this.lan)))\r\n    }\r\n\r\n    updateLocation = async () => {\r\n\r\n        navigator.geolocation.getCurrentPosition(\r\n            (position) =>{\r\n                this.lat = position.coords.latitude;\r\n                this.lan = position.coords.longitude;\r\n                axios.post('/DeliveryWorker/location', { ...this.currentUser, lat :this.lat, lan:this.lan })\r\n            },\r\n            function errorCallback(error) {\r\n                //do error handling\r\n            },\r\n            {\r\n                enableHighAccuracy: true,\r\n                timeout: 5000,\r\n                maximumAge: 0\r\n            }\r\n        );\r\n    }\r\n\r\n      getNextOrder = async ()=>{\r\n        await this.getOrders()\r\n        let nextOrder\r\n        let min={lat :0 ,lan:0}\r\n        const ppp = this.orders.filter(o => !o.received).forEach(order =>{\r\n            if(!nextOrder){\r\n                nextOrder = order\r\n                min = {lat :Math.abs(this.lat - order.lat), lan:Math.abs(this.lan - order.lan)}\r\n                return\r\n            }\r\n            if(min.lat < Math.abs(this.lat - order.lat) && min.lan < Math.abs(this.lan - order.lan)){\r\n                nextOrder = order\r\n                min = {lat :Math.abs(this.lat - order.lat), lan:Math.abs(this.lan - order.lan)}\r\n                return\r\n            }\r\n        })\r\n        console.log(nextOrder)\r\n        return nextOrder\r\n    }\r\n}\r\n","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Orders.js",["78","79"],"import React, { useEffect, useState } from 'react';\r\nimport { observer, inject } from 'mobx-react'\r\nimport Order from './Order'\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport '../styles/orders.css';\r\n\r\nfunction Orders(props) {\r\n\r\n      \r\n    const [search, setSearch] = useState(\"\")\r\n    const [select, setSelect] = useState(\"\")\r\n\r\n    const handleSearch = (e) => {\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n    const handleSelect = (e) => {\r\n        setSelect(e.target.value)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        props.ordersStore.getOrders();\r\n    }, [])\r\n\r\n    const summRecived = () => {\r\n        let counter = 0;\r\n        props.ordersStore.orders.forEach(v => v.received ? counter++ : counter)\r\n        return counter\r\n    }\r\n\r\n\r\n    const percentage = Math.floor(100 / props.ordersStore.orders.length * summRecived())\r\n    return (\r\n\r\n        <div className=\"ordersComp\">\r\n            {props.ordersStore.orders.length > 0 ?\r\n                <div>\r\n                    <div id=\"search-nav\">\r\n                        <input\r\n                            placeholder=\"Search\"\r\n                            id=\"search\"\r\n                            value={search}\r\n                            onChange={handleSearch}\r\n                        />\r\n\r\n                        <div className=\"dropdown dropdown-dark\">\r\n                            <select name=\"two\" className=\"dropdown-select\" value={select} onChange={handleSelect}>\r\n                                <option value=\"\">Select…</option>\r\n                                <option value=\"name\">Name</option>\r\n                                <option value=\"area\">Area</option>\r\n                                <option value=\"received\">Received</option>\r\n                                <option value=\"not received\">Not Received</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"ordersContainer\">\r\n                        <div id='orderTable'>\r\n\r\n                            <div id=\"header\" >\r\n                                <span>Customer Id</span>\r\n                                <span>Customer Name</span>\r\n                                <span>Date</span>\r\n                                <span>Phone Number</span>\r\n                                <span>Order Id</span>\r\n                                <span>Area</span>\r\n                                <span>Received</span>\r\n                            </div>\r\n\r\n                            <div id='orders'>\r\n\r\n                                {search === \"\" && select === 'received'\r\n                                    ? props.ordersStore.orders.filter(fd => fd[select]).map(o => <Order key={o._id} order={o} />)\r\n                                    : search === \"\" && select === 'not received' ?\r\n                                        props.ordersStore.orders.filter(fd => !fd['received']).map(o => <Order key={o._id} order={o} />)\r\n                                        : search === \"\"\r\n                                            ? props.ordersStore.orders.map(o => <Order key={o._id} order={o} />)\r\n                                            : props.ordersStore.orders.filter(fd =>\r\n                                                fd[select]\r\n                                                    .toUpperCase()\r\n                                                    .toLowerCase()\r\n                                                    .includes(search))\r\n                                                .map(o => <Order key={o._id} order={o} />)\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"circle\">\r\n                            <div id=\"title\">Orders Delivered</div>\r\n                            <CircularProgressbar\r\n                                value={percentage}\r\n                                text={`${percentage}%`}\r\n                                styles={buildStyles({\r\n                                    rotation: percentage / 100,\r\n                                    strokeLinecap: 'butt',\r\n                                    textSize: '20px',\r\n                                    pathTransitionDuration: 0.5,\r\n                                    pathColor: `rgba(260, 0, 0, ${percentage / 100})`,\r\n                                    textColor: '#f88',\r\n                                    trailColor: '#d6d6d6',\r\n                                    backgroundColor: '#3e98c7',\r\n                                })} />\r\n                               \r\n                            <img className='imgDel' src='https://image.freepik.com/free-vector/delivery-service-person-with-mask_23-2148494581.jpg' />\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                : null}\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default inject(\"ordersStore\")(observer(Orders))","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\MapContainer.js",["80","81"],"import React, { useEffect, useState } from 'react';\r\nimport { observer, inject } from 'mobx-react'\r\nimport '../styles/map.css';\r\nimport LeafletMap from './MapComponents/LeafletMap'\r\nimport Clock from './Clock'\r\n\r\nfunction MapContainer(props) {\r\n\r\n    const [nextOrder, setNextOrder] = useState({})\r\n\r\n    setInterval(() => {\r\n        props.ordersStore.updateLocation()\r\n    }, 10000);\r\n\r\n    const replaceOrder = async () => {\r\n        const order = await props.ordersStore.getNextOrder()\r\n        setNextOrder(order)\r\n    }\r\n    useEffect(() => {\r\n        props.ordersStore.updateLocation()\r\n        props.ordersStore.getOrders()\r\n        replaceOrder()\r\n    }, [])\r\n\r\n    const timeConvert = function (n) {\r\n        var num = n;\r\n        var hours = (num / 60);\r\n        var rhours = Math.floor(hours);\r\n        var minutes = (hours - rhours) * 60;\r\n        var rminutes = Math.round(minutes);\r\n        return rhours + \" hour(s) and \" + rminutes + \" minute(s).\";\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {props.ordersStore.locations.length > 0 ?\r\n                <div className='mapContainer'>\r\n\r\n                    \r\n                        <div id=\"mapid\">\r\n                            <LeafletMap locations={props.ordersStore.locations} />\r\n                        </div>\r\n                    \r\n\r\n                    <div className='onMap'>\r\n\r\n                        <div id=\"nearOrders\">\r\n                            <div className='near'>\r\n                                <div>\r\n                                    <div className='ordersLeft'>ORDERS LEFT</div>\r\n                                    <div className='orderNumLeft'>{props.ordersStore.totalNotReceivedYet}</div>\r\n                                </div>\r\n                                <div>\r\n                                    <div className='recOrder'> ORDERS HAS BEEN RECEIVED </div>\r\n                                    <div className='orderNum'>{props.ordersStore.totalReceived}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='approved'>\r\n                                <Clock />\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className='expected'>\r\n                            <div className='orderInfo'>\r\n                                <div className='nextCustomer'>Next Customer: {nextOrder && nextOrder.name}</div>\r\n                                <div className='nextCustomer'>ID: {nextOrder && nextOrder.id}</div>\r\n                                <div className='nextCustomer'>Phone Number: {nextOrder && nextOrder.phoneNumber}</div>\r\n                                <div className='nextCustomer'>Area: {nextOrder && nextOrder.area}</div>\r\n                            </div>\r\n                            <div className='orderNumber'>Order Number: {nextOrder && nextOrder._id}</div>\r\n\r\n\r\n                            <div className='total'>\r\n                                <div>\r\n                                <div className='expDis'>Total Distance:  {Math.floor(props.ordersStore.distance)}km</div>\r\n                                <div className='expTime'>Total Time Workday : {timeConvert(props.ordersStore.time * 60)}</div></div>\r\n                               <div> <img src='https://image.freepik.com/free-vector/delivery-courier-man-with-medical-protective-mask-his-face-holding-package-with-delivery-truck-delivery-during-quarantine-time_148087-145.jpg' /></div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div> : null}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default inject(\"ordersStore\")(observer(MapContainer))","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\LogIn.js",[],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Scan.js",[],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Contact.js",["82"],"import React, { useState, useEffect } from \"react\";\r\nimport '../styles/contact.css'\r\nimport axios from \"axios\";\r\nimport ReactSnackBar from \"react-js-snackbar\";\r\n\r\nfunction Contact() {\r\n\r\n\r\n    const [sh, setSh] = useState({show: false, showing: false})\r\n    const [message, setMessage] = useState()\r\n    const [company, setCompany] = useState()\r\n    const [userName, setName] = useState('')\r\n    const [userEmail, setEmail] = useState('')\r\n    const [userText, setText] = useState('')\r\n    const emptyContainer = () => {\r\n        setName('')\r\n        setEmail('')\r\n        setText('')\r\n    }\r\n    const sendContact = () => {\r\n        setTimeout(() => {\r\n            setSh({show: false, showing:false});\r\n          }, 2000);\r\n\r\n        if (!userName || !userEmail || !userText) {\r\n            setMessage('missing fields ')\r\n            setSh({show: true, showing: true})\r\n            return\r\n        }\r\n        axios.post('/DashBoard/contact', {name:userName, email: userEmail, text: userText})\r\n        setMessage('Message sent')\r\n        emptyContainer()\r\n        setSh({show: true, showing: true})\r\n    }\r\n\r\n\r\n    const getCompanyInfo = async function () {\r\n        const companyInfo = await axios.get('/companyInfo')\r\n        setCompany(companyInfo.data)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCompanyInfo()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"companyInfo\">\r\n            <h3>LET'S CONNECT</h3>\r\n            {company && <h2 className='subTitle'>{company.companyName}</h2>}\r\n\r\n            {company &&\r\n                <div className=\"containerCompany\">\r\n                    <div className='companyEmail'>\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        <div className='text'>MAIL</div>\r\n                        <div className='compText'>{company.email}</div>\r\n                    </div>\r\n                    <div className='companyPhoneNumber'>\r\n                        <i className=\"fas fa-phone\"></i>\r\n                        <div className='text'>PHONE NUMBER</div>\r\n                        <div className='compText'>{company.phoneNumber}</div>\r\n                    </div>\r\n                    <div className='companyUrl'>\r\n                        <i className=\"fab fa-chrome\"></i>\r\n                        <div className='text'>OUR WEBSITE</div>\r\n                        <div className='compText'>{company.url}</div>\r\n                    </div>\r\n                    <div className='companyAdress'>\r\n                        <i className=\"fas fa-map-signs\"></i>\r\n                        <div className='text'>OUR MAIN OFFICE</div>\r\n                        <div className='compText'>{company.address}</div>\r\n\r\n                    </div>\r\n                    <div className='companyFax'>\r\n                        <i className=\"fas fa-fax\"></i>\r\n                        <div className='text'>FAX</div>\r\n                        <div className='compText'>{company.fax}</div>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            <div className='contactUs'>\r\n                <div className='companyMap'>\r\n                    <div className='freeCase'>GET A FREE CASE EVALUATION TODAY!</div>\r\n                    <div className='available'>AVAILABLE 24 HOURS A DAY!</div>\r\n                    <input className='text' type='text' placeholder='Enter your name' value={userName} onChange={(e) => { setName(e.target.value) }} required />\r\n                    <input className='text' type='text' placeholder='Enter a valid email address' value={userEmail} onChange={(e) => { setEmail(e.target.value) }} required />\r\n                    <textarea className='text' id='msg' type='text' placeholder='Enter your message' value={userText} onChange={(e) => { setText(e.target.value) }} />\r\n                    <button id='click' className='btn' onClick={sendContact}>Submit</button>\r\n                        <ReactSnackBar Icon={<span>🦄</span>} Show={sh.show}>\r\n                            {message}\r\n                        </ReactSnackBar>\r\n                </div>\r\n                <div className='callUs'>\r\n                    <div className='freeCase'>WE ARE HERE</div>\r\n                    <div className='available'>SUN-THU 8:30AM-5PM / PHONES ARE OPEN 24/7</div>\r\n                    <div id=\"mapid\">\r\n                        <iframe className=\"companyLocation\" src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d8071.476772014608!2d35.44119313214815!3d32.60287923232328!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x151c5b2ff7e3c3b3%3A0x4c02e8436fd3f324!2sTaibe!5e0!3m2!1sen!2sil!4v1611124207049!5m2!1sen!2sil\" frameBorder=\"0\" allowFullScreen=\"\" aria-hidden=\"false\" tabIndex=\"0\"></iframe>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Contact","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\NavBar.js",[],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Order.js",["83"],"import React, { useEffect, useState } from 'react';\r\nimport { observer, inject } from 'mobx-react'\r\nimport '../styles/order.css';\r\nimport ReactSnackBar from \"react-js-snackbar\";\r\n\r\nfunction Order(props) {\r\n\r\n    const [sh, setSh] = useState({show: false, showing: false})\r\n\r\n\r\n\r\n\r\n    const getFormmatedDate = date => {\r\n        date = new Date(date);\r\n        let day = date.getDate() - 1;\r\n        const month = date.toLocaleString('en-us', { month: 'long' });\r\n        let year = date.getFullYear();\r\n        return `${month} ${day}, ${year}`;\r\n    };\r\n\r\n\r\n    const haveReceived = (id) => {\r\n\r\n        if (sh.Showing) return;\r\n        setSh({show: true, showing:true})\r\n        setTimeout(() => {\r\n          setSh({show: false, showing:false});\r\n        }, 2000);\r\n\r\n        if (!props.order.received) {\r\n            props.ordersStore.setReceived(id)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"order\" >\r\n                <span>{props.order.id}</span>\r\n                <span>{props.order.name}</span>\r\n                <span>{getFormmatedDate(props.order.date)}</span>\r\n                <span>{props.order.phoneNumber}</span>\r\n                <span>{props.order._id}</span>\r\n                <span>{props.order.area}</span>\r\n                <span onClick={() => haveReceived(props.order._id)}>\r\n                    <ReactSnackBar Icon={<span>🦄</span>} Show={sh.show}>\r\n                        The order has been received!\r\n                    </ReactSnackBar>\r\n                    {props.order.received ? <i className=\"fas fa-check\" /> : <div id='check'>-</div>}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default inject(\"ordersStore\")(observer(Order))","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Clock.js",[],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\MapComponents\\LeafletMap.js",[],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Display.js",[],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\MapComponents\\RoutingMachine.js",[],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\lib\\DateTime.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":3,"column":17,"nodeType":"90","messageId":"91","endLine":3,"endColumn":26},{"ruleId":"92","severity":1,"message":"93","line":110,"column":62,"nodeType":"94","messageId":"95","endLine":110,"endColumn":63,"fix":"96"},{"ruleId":"88","severity":1,"message":"97","line":138,"column":15,"nodeType":"90","messageId":"91","endLine":138,"endColumn":18},{"ruleId":"98","severity":1,"message":"99","line":25,"column":8,"nodeType":"100","endLine":25,"endColumn":10,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":107,"column":29,"nodeType":"104","endLine":107,"endColumn":151},{"ruleId":"98","severity":1,"message":"105","line":23,"column":8,"nodeType":"100","endLine":23,"endColumn":10,"suggestions":"106"},{"ruleId":"102","severity":1,"message":"103","line":79,"column":38,"nodeType":"104","endLine":79,"endColumn":231},{"ruleId":"107","severity":1,"message":"108","line":100,"column":25,"nodeType":"104","endLine":100,"endColumn":393},{"ruleId":"88","severity":1,"message":"89","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":26},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"111","text":"112"},"'ppp' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.ordersStore'. Either include it or remove the dependency array.","ArrayExpression",["113"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'props.ordersStore' and 'replaceOrder'. Either include them or remove the dependency array.",["114"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation",[2935,2950],"\r\n            .",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [props.ordersStore]",{"range":"119","text":"120"},"Update the dependencies array to be: [props.ordersStore, replaceOrder]",{"range":"121","text":"122"},[657,659],"[props.ordersStore]",[663,665],"[props.ordersStore, replaceOrder]"]