[{"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\index.js":"1","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\reportWebVitals.js":"2","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\App.js":"3","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\stores\\OrdersStore.js":"4","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\MapContainer.js":"5","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\LogIn.js":"6","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Orders.js":"7","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\NavBar.js":"8","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Contact.js":"9","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Scan.js":"10","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Clock.js":"11","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Order.js":"12","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\MapComponents\\LeafletMap.js":"13","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Card.js":"14","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Display.js":"15","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\MapComponents\\RoutingMachine.js":"16","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\lib\\DateTime.js":"17"},{"size":647,"mtime":1611487171486,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":1044,"mtime":1611487144619,"results":"21","hashOfConfig":"19"},{"size":4772,"mtime":1611560855449,"results":"22","hashOfConfig":"19"},{"size":3732,"mtime":1611481989630,"results":"23","hashOfConfig":"19"},{"size":3034,"mtime":1611488321275,"results":"24","hashOfConfig":"19"},{"size":5055,"mtime":1611481989631,"results":"25","hashOfConfig":"19"},{"size":1515,"mtime":1611481989630,"results":"26","hashOfConfig":"19"},{"size":4812,"mtime":1611560872567,"results":"27","hashOfConfig":"19"},{"size":1218,"mtime":1611555006455,"results":"28","hashOfConfig":"19"},{"size":963,"mtime":1611481989620,"results":"29","hashOfConfig":"19"},{"size":1713,"mtime":1611481989630,"results":"30","hashOfConfig":"19"},{"size":1138,"mtime":1611481989623,"results":"31","hashOfConfig":"19"},{"size":1469,"mtime":1611555012962,"results":"32","hashOfConfig":"19"},{"size":830,"mtime":1611481989621,"results":"33","hashOfConfig":"19"},{"size":1497,"mtime":1611481989623,"results":"34","hashOfConfig":"19"},{"size":1558,"mtime":1611481989637,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"z0p52q",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\index.js",[],["75","76"],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\reportWebVitals.js",[],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\App.js",["77"],"import './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport React, { useEffect } from 'react';\n\nimport LogIn from './components/LogIn'\nimport { observer, inject } from 'mobx-react'\nimport Orders from './components/Orders';\nimport MapContainer from './components/MapContainer';\nimport Contact from './components/Contact';\nimport NavBar from './components/NavBar';\nimport Scan from './components/Scan';\n\nfunction App(props) {\n\n  props.ordersStore.checkLocalStorage()\n  return (\n    <Router>\n      {props.ordersStore.islogIn && <NavBar/> }\n      <Route exact path='/' render={() =>props.ordersStore.islogIn ? <Orders/> : <LogIn/>} /> \n      <Route exact path='/contact' render={() =>props.ordersStore.islogIn ? <Contact/> : <LogIn/>} /> \n      <Route exact path='/map' render={() =>props.ordersStore.islogIn ? <MapContainer /> : <LogIn/>} />\n      <Route exact path='/Scan' render={() =>props.ordersStore.islogIn ? <Scan /> : <LogIn/>} />\n\n    </Router>\n  )\n}\n\nexport default inject('ordersStore')(observer(App));\n","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\stores\\OrdersStore.js",["78","79"],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\MapContainer.js",["80","81"],"import React, { useEffect, useState } from 'react';\r\nimport { observer, inject } from 'mobx-react'\r\nimport '../styles/map.css';\r\nimport LeafletMap from './MapComponents/LeafletMap'\r\nimport Clock from './Clock'\r\n\r\nfunction MapContainer(props) {\r\n\r\n    const [nextOrder, setNextOrder] = useState({})\r\n\r\n    setInterval(() => {\r\n        props.ordersStore.updateLocation()\r\n    }, 10000);\r\n\r\n    const replaceOrder = async () => {\r\n        const order = await props.ordersStore.getNextOrder()\r\n        setNextOrder(order)\r\n    }\r\n    useEffect(() => {\r\n        props.ordersStore.updateLocation()\r\n        props.ordersStore.getOrders()\r\n        replaceOrder()\r\n    }, [])\r\n\r\n    const timeConvert = function (n) {\r\n        var num = n;\r\n        var hours = (num / 60);\r\n        var rhours = Math.floor(hours);\r\n        var minutes = (hours - rhours) * 60;\r\n        var rminutes = Math.round(minutes);\r\n        return rhours + \" hour(s) and \" + rminutes + \" minute(s).\";\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {props.ordersStore.locations.length > 0 ?\r\n                <div className='mapContainer'>\r\n\r\n                    \r\n                        <div id=\"mapid\">\r\n                            <LeafletMap locations={props.ordersStore.locations} />\r\n                        </div>\r\n                    \r\n\r\n                    <div className='onMap'>\r\n\r\n                        <div id=\"nearOrders\">\r\n                            <div className='near'>\r\n                                <div>\r\n                                    <div className='ordersLeft'>ORDERS LEFT</div>\r\n                                    <div className='orderNumLeft'>{props.ordersStore.totalNotReceivedYet}</div>\r\n                                </div>\r\n                                <div>\r\n                                    <div className='recOrder'> ORDERS HAS BEEN RECEIVED </div>\r\n                                    <div className='orderNum'>{props.ordersStore.totalReceived}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='approved'>\r\n                                <Clock />\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className='expected'>\r\n                            <div className='orderInfo'>\r\n                                <div className='nextCustomer'>Next Customer: {nextOrder && nextOrder.name}</div>\r\n                                <div className='nextCustomer'>ID: {nextOrder && nextOrder.id}</div>\r\n                                <div className='nextCustomer'>Phone Number: {nextOrder && nextOrder.phoneNumber}</div>\r\n                                <div className='nextCustomer'>Area: {nextOrder && nextOrder.area}</div>\r\n                            </div>\r\n                            <div className='orderNumber'>Order Number: {nextOrder && nextOrder._id}</div>\r\n\r\n\r\n                            <div className='total'>\r\n                                <div>\r\n                                <div className='expDis'>Total Distance:  {Math.floor(props.ordersStore.distance)}km</div>\r\n                                <div className='expTime'>Total Time Workday : {timeConvert(props.ordersStore.time * 60)}</div></div>\r\n                               <div> <img src='https://image.freepik.com/free-vector/delivery-courier-man-with-medical-protective-mask-his-face-holding-package-with-delivery-truck-delivery-during-quarantine-time_148087-145.jpg' /></div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div> : null}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default inject(\"ordersStore\")(observer(MapContainer))","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\LogIn.js",[],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Orders.js",["82","83"],"import React, { useEffect, useState } from 'react';\r\nimport { observer, inject } from 'mobx-react'\r\nimport Order from './Order'\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport '../styles/orders.css';\r\n\r\nfunction Orders(props) {\r\n\r\n      \r\n    const [search, setSearch] = useState(\"\")\r\n    const [select, setSelect] = useState(\"\")\r\n\r\n    const handleSearch = (e) => {\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n    const handleSelect = (e) => {\r\n        setSelect(e.target.value)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        props.ordersStore.getOrders();\r\n    }, [])\r\n\r\n    const summRecived = () => {\r\n        let counter = 0;\r\n        props.ordersStore.orders.forEach(v => v.received ? counter++ : counter)\r\n        return counter\r\n    }\r\n\r\n\r\n    const percentage = Math.floor(100 / props.ordersStore.orders.length * summRecived())\r\n    return (\r\n\r\n        <div className=\"ordersComp\">\r\n            {props.ordersStore.orders.length > 0 ?\r\n                <div>\r\n                    <div id=\"search-nav\">\r\n                        <input\r\n                            placeholder=\"Search\"\r\n                            id=\"search\"\r\n                            value={search}\r\n                            onChange={handleSearch}\r\n                        />\r\n\r\n                        <div className=\"dropdown dropdown-dark\">\r\n                            <select name=\"two\" className=\"dropdown-select\" value={select} onChange={handleSelect}>\r\n                                <option value=\"\">Select…</option>\r\n                                <option value=\"name\">Name</option>\r\n                                <option value=\"area\">Area</option>\r\n                                <option value=\"received\">Received</option>\r\n                                <option value=\"not received\">Not Received</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"ordersContainer\">\r\n                        <div id='orderTable'>\r\n\r\n                            <div id=\"header\" >\r\n                                <span>Customer Id</span>\r\n                                <span>Customer Name</span>\r\n                                <span>Date</span>\r\n                                <span>Phone Number</span>\r\n                                <span>Order Id</span>\r\n                                <span>Area</span>\r\n                                <span>Received</span>\r\n                            </div>\r\n\r\n                            <div id='orders'>\r\n\r\n                                {search === \"\" && select === 'received'\r\n                                    ? props.ordersStore.orders.filter(fd => fd[select]).map(o => <Order key={o._id} order={o} />)\r\n                                    : search === \"\" && select === 'not received' ?\r\n                                        props.ordersStore.orders.filter(fd => !fd['received']).map(o => <Order key={o._id} order={o} />)\r\n                                        : search === \"\"\r\n                                            ? props.ordersStore.orders.map(o => <Order key={o._id} order={o} />)\r\n                                            : props.ordersStore.orders.filter(fd =>\r\n                                                fd[select]\r\n                                                    .toUpperCase()\r\n                                                    .toLowerCase()\r\n                                                    .includes(search))\r\n                                                .map(o => <Order key={o._id} order={o} />)\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"circle\">\r\n                            <div id=\"title\">Orders Delivered</div>\r\n                            <CircularProgressbar\r\n                                value={percentage}\r\n                                text={`${percentage}%`}\r\n                                styles={buildStyles({\r\n                                    rotation: percentage / 100,\r\n                                    strokeLinecap: 'butt',\r\n                                    textSize: '20px',\r\n                                    pathTransitionDuration: 0.5,\r\n                                    pathColor: `rgba(260, 0, 0, ${percentage / 100})`,\r\n                                    textColor: '#f88',\r\n                                    trailColor: '#d6d6d6',\r\n                                    backgroundColor: '#3e98c7',\r\n                                })} />\r\n                               \r\n                            <img className='imgDel' src='https://image.freepik.com/free-vector/delivery-service-person-with-mask_23-2148494581.jpg' />\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                : null}\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default inject(\"ordersStore\")(observer(Orders))","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\NavBar.js",[],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Contact.js",["84"],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Scan.js",[],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Clock.js",[],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Order.js",["85"],"import React, { useEffect, useState } from 'react';\r\nimport { observer, inject } from 'mobx-react'\r\nimport '../styles/order.css';\r\nimport ReactSnackBar from \"react-js-snackbar\";\r\n\r\nfunction Order(props) {\r\n\r\n    const [sh, setSh] = useState({show: false, showing: false})\r\n\r\n\r\n\r\n\r\n    const getFormmatedDate = date => {\r\n        date = new Date(date);\r\n        let day = date.getDate() - 1;\r\n        const month = date.toLocaleString('en-us', { month: 'long' });\r\n        let year = date.getFullYear();\r\n        return `${month} ${day}, ${year}`;\r\n    };\r\n\r\n\r\n    const haveReceived = (id) => {\r\n\r\n        if (sh.Showing) return;\r\n        setSh({show: true, showing:true})\r\n        setTimeout(() => {\r\n          setSh({show: false, showing:false});\r\n        }, 2000);\r\n\r\n        if (!props.order.received) {\r\n            props.ordersStore.setReceived(id)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"order\" >\r\n                <span>{props.order.id}</span>\r\n                <span>{props.order.name}</span>\r\n                <span>{getFormmatedDate(props.order.date)}</span>\r\n                <span>{props.order.phoneNumber}</span>\r\n                <span>{props.order._id}</span>\r\n                <span>{props.order.area}</span>\r\n                <span onClick={() => haveReceived(props.order._id)}>\r\n                    <ReactSnackBar Icon={<span>🦄</span>} Show={sh.show}>\r\n                        The order has been received!\r\n                    </ReactSnackBar>\r\n                    {props.order.received ? <i className=\"fas fa-check\" /> : <div id='check'>-</div>}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default inject(\"ordersStore\")(observer(Order))","C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\MapComponents\\LeafletMap.js",[],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Card.js",[],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\Display.js",[],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\components\\MapComponents\\RoutingMachine.js",[],"C:\\Users\\aubid\\Desktop\\try3\\delivery\\src\\lib\\DateTime.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":3,"column":17,"nodeType":"92","messageId":"93","endLine":3,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":111,"column":62,"nodeType":"96","messageId":"97","endLine":111,"endColumn":63,"fix":"98"},{"ruleId":"90","severity":1,"message":"99","line":151,"column":15,"nodeType":"92","messageId":"93","endLine":151,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":23,"column":8,"nodeType":"102","endLine":23,"endColumn":10,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":79,"column":38,"nodeType":"106","endLine":79,"endColumn":231},{"ruleId":"100","severity":1,"message":"107","line":25,"column":8,"nodeType":"102","endLine":25,"endColumn":10,"suggestions":"108"},{"ruleId":"104","severity":1,"message":"105","line":107,"column":29,"nodeType":"106","endLine":107,"endColumn":151},{"ruleId":"109","severity":1,"message":"110","line":100,"column":25,"nodeType":"106","endLine":100,"endColumn":393},{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"113","text":"114"},"'ppp' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.ordersStore' and 'replaceOrder'. Either include them or remove the dependency array.","ArrayExpression",["115"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'props.ordersStore'. Either include it or remove the dependency array.",["116"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation",[2968,2983],"\r\n            .",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [props.ordersStore, replaceOrder]",{"range":"121","text":"122"},"Update the dependencies array to be: [props.ordersStore]",{"range":"123","text":"124"},[663,665],"[props.ordersStore, replaceOrder]",[657,659],"[props.ordersStore]"]