[{"/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/index.js":"1","/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/App.js":"2","/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/reportWebVitals.js":"3","/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/stores/OrdersStore.js":"4","/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/LogIn.js":"5","/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/MapContainer.js":"6","/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/NavBar.js":"7","/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/Orders.js":"8","/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/Contact.js":"9","/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/Scan.js":"10","/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/Clock.js":"11","/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/Order.js":"12","/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/MapComponents/LeafletMap.js":"13","/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/Card.js":"14","/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/Display.js":"15","/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/MapComponents/RoutingMachine.js":"16","/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/lib/DateTime.js":"17"},{"size":647,"mtime":1611567010183,"results":"18","hashOfConfig":"19"},{"size":1044,"mtime":1611567010145,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1611567010185,"results":"21","hashOfConfig":"19"},{"size":4644,"mtime":1611576140048,"results":"22","hashOfConfig":"19"},{"size":2987,"mtime":1611576140025,"results":"23","hashOfConfig":"19"},{"size":4287,"mtime":1611581281393,"results":"24","hashOfConfig":"19"},{"size":1475,"mtime":1611567010181,"results":"25","hashOfConfig":"19"},{"size":4893,"mtime":1611567010182,"results":"26","hashOfConfig":"19"},{"size":4748,"mtime":1611576140022,"results":"27","hashOfConfig":"19"},{"size":2056,"mtime":1611589904389,"results":"28","hashOfConfig":"19"},{"size":919,"mtime":1611567010147,"results":"29","hashOfConfig":"19"},{"size":1658,"mtime":1611567010182,"results":"30","hashOfConfig":"19"},{"size":1098,"mtime":1611567010149,"results":"31","hashOfConfig":"19"},{"size":1799,"mtime":1611589794507,"results":"32","hashOfConfig":"19"},{"size":802,"mtime":1611567010148,"results":"33","hashOfConfig":"19"},{"size":1449,"mtime":1611567010150,"results":"34","hashOfConfig":"19"},{"size":1497,"mtime":1611567010184,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1c9a9j0",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/index.js",[],["75","76"],"/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/App.js",["77"],"import './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport React, { useEffect } from 'react';\n\nimport LogIn from './components/LogIn'\nimport { observer, inject } from 'mobx-react'\nimport Orders from './components/Orders';\nimport MapContainer from './components/MapContainer';\nimport Contact from './components/Contact';\nimport NavBar from './components/NavBar';\nimport Scan from './components/Scan';\n\nfunction App(props) {\n\n  props.ordersStore.checkLocalStorage()\n  return (\n    <Router>\n      {props.ordersStore.islogIn && <NavBar/> }\n      <Route exact path='/' render={() =>props.ordersStore.islogIn ? <Orders/> : <LogIn/>} /> \n      <Route exact path='/contact' render={() =>props.ordersStore.islogIn ? <Contact/> : <LogIn/>} /> \n      <Route exact path='/map' render={() =>props.ordersStore.islogIn ? <MapContainer /> : <LogIn/>} />\n      <Route exact path='/Scan' render={() =>props.ordersStore.islogIn ? <Scan /> : <LogIn/>} />\n\n    </Router>\n  )\n}\n\nexport default inject('ordersStore')(observer(App));\n","/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/reportWebVitals.js",[],"/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/stores/OrdersStore.js",["78","79"],"import { observable, action, makeObservable, computed } from 'mobx'\nimport axios from \"axios\";\nimport L from \"leaflet\";\n\nexport default class OrdersStore {\n    constructor() {\n        this.orders = []\n        this.currentUser = {\n            \n        }\n        this.islogIn = false\n        this.locations = []\n        this.lat = 32.073582\n        this.lan = 34.788052\n        this.distance = 0\n        this.time = 0\n        makeObservable(this, {\n            distance: observable,\n            time: observable,\n            lat: observable,\n            lan: observable,\n            orders: observable,\n            locations: observable,\n            getOrders: action,\n            currentUser: observable,\n            islogIn: observable,\n            setReceived: observable,\n            login: action,\n            logout: action,\n            totalReceived: computed,\n            totalNotReceivedYet: computed,\n            getLocations: action,\n            checkLocalStorage: action,\n            setLocalStorage: action,\n            emptyLocalStorage: action,\n            updateLocation: action,\n            getNextOrder : action,\n            updateDistTime: action,\n            checkQrCode:action\n        })\n    }\n\n    updateDistTime(distance ,time){\n        this.distance = distance\n        this.time = time\n    }\n\n    checkLocalStorage() {\n        const userName = JSON.parse(localStorage.getItem('userName'));\n        if (!userName) {\n            this.islogIn = false\n            this.currentUser = {}\n            return\n        }\n        this.islogIn = true\n        this.currentUser = userName\n    }\n\n\n    setLocalStorage(userName) {\n        localStorage.setItem('userName', JSON.stringify(userName))\n        this.islogIn = true\n        this.currentUser = userName\n    }\n\n    emptyLocalStorage() {\n        localStorage.clear()\n        this.islogIn = false\n        this.currentUser = {}\n        this.orders = []\n        this.locations = []\n    }\n\n    async getOrders() {\n        let orders = await axios.post('http://localhost:8080/orders', this.currentUser)\n        this.orders = orders.data.packages\n        this.getLocations()\n    }\n\n    login(isLogIn, input) {\n        if (isLogIn) {\n            this.setLocalStorage(input)\n            this.getOrders()\n        } else {\n            alert(\"userName or password is not correct!\")\n        }\n    }\n\n    logout = () => {\n        this.emptyLocalStorage()\n    }\n\n    async setReceived(orderId) {\n        await axios.post('http://localhost:8080/setReceived', { id: orderId })\n        this.getOrders()\n    }\n\n    get totalReceived() {\n        let c = 0;\n        for (let order of this.orders) {\n            if (order.received) { c++ }\n        }\n        return c;\n    }\n\n    get totalNotReceivedYet() {\n        return this.orders.length - this.totalReceived;\n    }\n\n    async getLocations() {\n        this.locations = this.orders.filter(o => !o.received).\n            map(v => { return L.latLng(parseFloat(v.lat), parseFloat(v.lan)) })\n        this.locations.unshift( L.latLng(parseFloat(this.lat), parseFloat(this.lan)))\n    }\n\n    updateLocation = async () => {\n\n        navigator.geolocation.getCurrentPosition(\n            (position) =>{\n                this.lat = position.coords.latitude;\n                this.lan = position.coords.longitude;\n                axios.post('http://localhost:8080/DeliveryWorker/location', { ...this.currentUser, lat :this.lat, lan:this.lan })\n            },\n            function errorCallback(error) {\n               \n            },\n            {\n                enableHighAccuracy: true,\n                timeout: 5000,\n                maximumAge: 0\n            }\n        );\n    }\n\n    async checkQrCode(id){\n        await this.getOrders()\n        let orderQR\n        this.orders.filter(o => !o.received).forEach(order =>{\n          if(order._id === id){\n            orderQR = order\n            return\n          }\n        })\n        return orderQR\n    }\n\n      getNextOrder = async ()=>{\n        await this.getOrders()\n        let nextOrder\n        let min={lat :0 ,lan:0}\n        const ppp = this.orders.filter(o => !o.received).forEach(order =>{\n            if(!nextOrder){\n                nextOrder = order\n                min = {lat :Math.abs(this.lat - order.lat), lan:Math.abs(this.lan - order.lan)}\n                return\n            }\n            if(min.lat < Math.abs(this.lat - order.lat) && min.lan < Math.abs(this.lan - order.lan)){\n                nextOrder = order\n                min = {lat :Math.abs(this.lat - order.lat), lan:Math.abs(this.lan - order.lan)}\n                return\n            }\n        })\n        console.log(nextOrder)\n        return nextOrder\n    }\n}\n","/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/LogIn.js",[],"/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/MapContainer.js",["80","81"],"/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/NavBar.js",[],"/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/Orders.js",["82","83"],"import React, { useEffect, useState } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport Order from './Order'\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport '../styles/orders.css';\n\nfunction Orders(props) {\n\n      \n    const [search, setSearch] = useState(\"\")\n    const [select, setSelect] = useState(\"\")\n\n    const handleSearch = (e) => {\n        setSearch(e.target.value)\n    }\n\n    const handleSelect = (e) => {\n        setSelect(e.target.value)\n    }\n\n\n    useEffect(() => {\n        props.ordersStore.getOrders();\n    }, [])\n\n    const summRecived = () => {\n        let counter = 0;\n        props.ordersStore.orders.forEach(v => v.received ? counter++ : counter)\n        return counter\n    }\n\n\n    const percentage = Math.floor(100 / props.ordersStore.orders.length * summRecived())\n    return (\n\n        <div className=\"ordersComp\">\n            {props.ordersStore.orders.length > 0 ?\n                <div>\n                    <div id=\"search-nav\">\n                        <input\n                            placeholder=\"Search\"\n                            id=\"search\"\n                            value={search}\n                            onChange={handleSearch}\n                        />\n\n                        <div className=\"dropdown dropdown-dark\">\n                            <select name=\"two\" className=\"dropdown-select\" value={select} onChange={handleSelect}>\n                                <option value=\"\">Select…</option>\n                                <option value=\"name\">Name</option>\n                                <option value=\"area\">Area</option>\n                                <option value=\"received\">Received</option>\n                                <option value=\"not received\">Not Received</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div className=\"ordersContainer\">\n                        <div id='orderTable'>\n\n                            <div id=\"header\" >\n                                <span>Customer Id</span>\n                                <span>Customer Name</span>\n                                <span>Date</span>\n                                <span>Phone Number</span>\n                                <span>Order Id</span>\n                                <span>Area</span>\n                                <span>Received</span>\n                            </div>\n\n                            <div id='orders'>\n\n                            { select === 'received' \n                                    ? props.ordersStore.orders.filter(fd => fd[select]).map(o => <Order key={o._id} order={o} />)\n                                    :  select === 'not received' ?\n                                        props.ordersStore.orders.filter(fd => !fd['received']).map(o => <Order key={o._id} order={o} />)\n                                        : (!select)\n                                            ? props.ordersStore.orders.map(o => <Order key={o._id} order={o} />)\n                                            : props.ordersStore.orders.filter(fd =>\n                                                fd[select]\n                                                    .toUpperCase()\n                                                    .toLowerCase()\n                                                    .includes(search))\n                                                .map(o => <Order key={o._id} order={o} />)\n                                }\n                            </div>\n                        </div>\n\n\n                        <div className=\"circle\">\n                            <div id=\"title\">Orders Delivered</div>\n                            <CircularProgressbar\n                                value={percentage}\n                                text={`${percentage}%`}\n                                styles={buildStyles({\n                                    rotation: percentage / 100,\n                                    strokeLinecap: 'butt',\n                                    textSize: '20px',\n                                    pathTransitionDuration: 0.5,\n                                    pathColor: `rgba(260, 0, 0, ${percentage / 100})`,\n                                    textColor: '#f88',\n                                    trailColor: '#d6d6d6',\n                                    backgroundColor: '#3e98c7',\n                                })} />\n                               \n                            <img className='imgDel' src='https://image.freepik.com/free-vector/delivery-service-person-with-mask_23-2148494581.jpg' />\n\n                        </div>\n\n                    </div>\n\n                </div>\n\n\n                : null}\n\n\n        </div>\n    )\n\n}\n\nexport default inject(\"ordersStore\")(observer(Orders))","/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/Contact.js",["84"],"/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/Scan.js",[],"/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/Clock.js",[],"/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/Order.js",["85"],"import React, { useEffect, useState } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport '../styles/order.css';\nimport ReactSnackBar from \"react-js-snackbar\";\n\nfunction Order(props) {\n\n    const [sh, setSh] = useState({show: false, showing: false})\n\n\n\n\n    const getFormmatedDate = date => {\n        date = new Date(date);\n        let day = date.getDate() - 1;\n        const month = date.toLocaleString('en-us', { month: 'long' });\n        let year = date.getFullYear();\n        return `${month} ${day}, ${year}`;\n    };\n\n\n    const haveReceived = (id) => {\n\n        if (sh.Showing) return;\n        setSh({show: true, showing:true})\n        setTimeout(() => {\n          setSh({show: false, showing:false});\n        }, 2000);\n\n        if (!props.order.received) {\n            props.ordersStore.setReceived(id)\n        }\n    }\n\n\n    return (\n        <div>\n            <div className=\"order\" >\n                <span>{props.order.id}</span>\n                <span>{props.order.name}</span>\n                <span>{getFormmatedDate(props.order.date)}</span>\n                <span>{props.order.phoneNumber}</span>\n                <span>{props.order._id}</span>\n                <span>{props.order.area}</span>\n                <span onClick={() => haveReceived(props.order._id)}>\n                    <ReactSnackBar Icon={<span>🦄</span>} Show={sh.show}>\n                        The order has been received!\n                    </ReactSnackBar>\n                    {props.order.received ? <i className=\"fas fa-check\" /> : <div id='check'>-</div>}</span>\n            </div>\n        </div>\n    )\n\n}\n\nexport default inject(\"ordersStore\")(observer(Order))","/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/MapComponents/LeafletMap.js",[],"/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/Card.js",[],"/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/Display.js",[],"/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/components/MapComponents/RoutingMachine.js",[],"/Users/iamaliabdelhai/Desktop/code/bootcamp/Projects/deliveryApplication/src/lib/DateTime.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":3,"column":17,"nodeType":"92","messageId":"93","endLine":3,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":111,"column":62,"nodeType":"96","messageId":"97","endLine":111,"endColumn":63,"fix":"98"},{"ruleId":"90","severity":1,"message":"99","line":151,"column":15,"nodeType":"92","messageId":"93","endLine":151,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":23,"column":8,"nodeType":"102","endLine":23,"endColumn":10,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":103,"column":39,"nodeType":"106","endLine":103,"endColumn":232},{"ruleId":"100","severity":1,"message":"107","line":25,"column":8,"nodeType":"102","endLine":25,"endColumn":10,"suggestions":"108"},{"ruleId":"104","severity":1,"message":"105","line":107,"column":29,"nodeType":"106","endLine":107,"endColumn":151},{"ruleId":"109","severity":1,"message":"110","line":100,"column":25,"nodeType":"106","endLine":100,"endColumn":393},{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"113","text":"114"},"'ppp' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.ordersStore' and 'replaceOrder'. Either include them or remove the dependency array.","ArrayExpression",["115"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'props.ordersStore'. Either include it or remove the dependency array.",["116"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation",[2900,2914],"\n            .",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [props.ordersStore, replaceOrder]",{"range":"121","text":"122"},"Update the dependencies array to be: [props.ordersStore]",{"range":"123","text":"124"},[641,643],"[props.ordersStore, replaceOrder]",[633,635],"[props.ordersStore]"]